## BUGS!
===Notes from code review====
* Take another look at timeout time, maybe consider time & number of jobs still running, or change postback to an update rather a "timeout" message.
* append branch or repo to cache file names to avoid clash with matching cset
* dry.run - "Would have written to cache" in SchedulerDBPoller, pollByRevision
* Add documentation notes about security bugs
* Check status of bug - do we poll _all_ bugs or only a subset of FIXED,NEW,etc? Just check scalability here as # of bugs to poll grows over time
* Change all prints to logging (or remove unnecessary prints)
* 161-164 of autoland_queue can be removed
* haven't finished multiple branch handling - with the patchset being pulled from DB
* let's make sure we are prioritizing high retry patchsets when pulling out patchset from DB
* clean interrupt of the modules
* break up the handling of the returned messages a bit more?
* handling timed_out - as exemplified yesterday it is possible for schedulerdbpoller to never manage to post to the bug and send out the message to autoland of status = 'timed_out' so we need to tie this into the comments system somehow...another flag in the message that bug message was never made?
* bear said something about strings and not having to replace them all over the code - remember this? ** helper class and schema revision - version number of API and payload to save grief if there are other message structures in the future
* HgPusher line 66 add verbose flags to the regex - compile the regex ahead of time too?
* could put a stopping condition as well (line 66 - HgPusher)
* apparently you can have scm_level{1,2,3} and not be able to push to a _particular_ repo with that same level of perms -- we will need IT here (according to Hal's experience, is this a normal use case?)
** process as implemented is not the same as described in the wiki
* can someone change their bugzilla email to one with more permissions and get away with pushing as the higher level person?
* if hgpusher lags in finishing its job, the message might be picked up by another?  need to ack on message receipt - we should let rabbit mq's delivery method do its thing, and handle the 'hgpusher didn't do it's job' somewhere else - a queue within hgpusher of work being done?
* never do anything long running in your callback handler
* handling clone errors - Nagios alert whether it can recover on its own or not - sometimes we will have manual intervention - try gets reset, we'd hit this case for a little while - keep retrying (forever) and if we made it to this point we know the repo did exist once before
* if a worker is having hg errors, maybe that's a notice back to the system (heartbeat)
=============================

* We need better handling on try fail - when try is down all jobs should pause/wait for try up again. (Pending on Catlee's tree status application?)
* Incoming try syntax should be stripped of "bug XXXX" or "--post-to-bug" or "-n", since we add those anyways.
* I would like to see a handling of a "shutdown" message being sent to hgpushers which could make it possible for a graceful shutdown.
    |-> Could be sent using fanout and high priority to push it to the top of the queue?
    |-> Could also add a field for specifying an hgpusher instance (pid or hgpusher.* or... i don't know)
* Some method of clearing out patch files that we know aren't being used -- could be done at the end of pushing a job.
* Get rid of quotation marks around commit message.
* Handling failed whiteboard modifications.

* FIXED: Add tests to test_dbhandler for querying patchsets on other params than branch
* FIXED: Whenever schedulerdbpoller sends out messages that autoland doesn't track, line 381 dies on NoneType error
* FIXED: [autoland:$patchID:try_syntax] returned invalid whiteboard autoland tag (and shouldn't, should go forth with 'try' as branch) -- would like to be able to be flexible enough
to grab either or both try_syntax/patchIDs
* FIXED: multiple postings when the patchID is incorrect:
    Autoland Failure
    Specified patches [2429] do not exist, or are not posted on this bug.
    Comment published to bug 657828
    No patches listed right now, will be monitoring this bug.
* FIXED: WRITE A TEST - check 404 on attachment url: hgpusher died on trying to pull the patch (incorrectly formed url for attachments) and there was no comment inserted to db or message back to autoland_queue
* FIXED: Why does autolanduser post as Marc Jessome?? :) (answer: .hgrc)
* FIXED: Need to check for dupe patch_sets here 
* FIXED: add queue purge flag
* FIXED: Do something about the split config/auth.ini usage in hgpusher (sync the production values with puppet?)
* FIXED: NIT: autoland_queue log gets 3x the bug comment text (only one post to bug thankfully)
* FIXED: in hgpusher has_sufficient_permissions, should check the author email directly, as well as the BugzillaEmail field. (see inline XXX)
* FIXED: rename patches to user_patches where applicable.
* FIXED: get rid of log_msg usage.
* FIXED: dont time.sleep(5) in autoland_queue.
* FIXED: Make sure logs are rotating correctly.
* FIXED: try() on the int(attachment['id']) in autoland_queue.py instead of just casting to int()
* FIXED: change list iterations to tuple iterations.
* FIXED: add more tests to check if we need to non-greedy the replacement matches for inserting [autoland-in-queue] like: '[autoland]blahblahblah]'
* FIXED: need a lock file on schedulerDbPoller, in case cron job runs a long time

## Lukas Notes
* cleanup & metrics: Set up an archiving script for postedbug.log/cache '*.done' files on cruncher - so we have history of usage and also are cleaning up periodically
** Nagios check top entry in cache files and warn about possibly hung builds
** Cronjob to clean up .done files every 24 hours that are more than 24 hours old

* informing: Documentation, blogs, tweets, Yammers, Lightning Talk, Brownbag - get the word out

* status dashboard - expose the bugs that have been run through autoland

* project management: tracking bug for bugs filed to this component - perhaps a bugzilla RelEng component?

* development: API implementation, multi-branch landings and map of requirements for each branch activated in this system, Bugzilla Extension for UI

* enhancement: try syntax for retrying oranges when below the threshold? Specifying the threshold?
* enhancement: builds cancelled by Self-Serve would note that in the message to the bug with final results (currently builds that end with exceptions are just 'complete' instead of interrupted)
* enhancement: Makefile & setup script for getting this system up and running in a virtualenv


## Marc Notes
0. Set up autoland-staging02 as the staging box (autoland-staging01 becomes production) with Puppet
1. The use case of "Flag bug for landing --> Wait for review --> land":
    -  Will not currently work, due to an early design mistake. The fix is
       fairly straight forward, but will require some time. I can redesign
       this and implement ASAP. I've outlined the necessary changes below:
        - When a tag is found by autoland_queue.py:bz_search_handler(),
          the bug needs to be checked for reviews in the case that it is
          a to-branch landing.
        - As it stands right now, the tag is pulled and entered into the queue
          and then when popped off the queue, the reviews are checked. 
        - autoland_queue.py:get_patchset() performs checking on the reviews
          based on try/branch. get_patchset() fails out and comments on bad
          reviews. This is NOT what we want.
        - We want to check the patch in autoland_queue.py:bz_search_handler()
          for the proper review permissions, and if they are not there, we
          simply ignore it until out next poll.
        - OPTIONS:
              o  change autoland_queue.py:get_patchset() to have a toggle on
                 comment posting, and use the get_patchset function to check.
              o  rewrite autoland_queue.py:get_patchset() to return a
                 pass/fail state, for example:
                    return (False, 'Autoland Failure Comment')
                 and only post the comment in the correct cases.
              o  I'm sure there are better ideas out there
        - NOTE: Check patch headers at this point, so users aren't waiting
                a while just for a failure.
2. Some improvements I would like to make are:
    - Get tests using a static test config, rather than the default config
      file.
    - After landing on branch, should set attachment flag checked-in+ (if it's possible to do a whiteboard tag, comment, checkin flag as one transaction that would be great)
3. autoland_queue needs to poll the database for jobs that have been in the queue for a long time (waiting for tests to be written)
4. Handle clone failures properly. (see Code review question)

## Dear Future Autolanding
0. HgExtension (using Pbiggar's trychooser one) - could take your patches(diff) and create bugzilla 
   attachemnt with bz API, put in the right autoland comments and Bob's your uncle: you just did it
   all from the command line
1. Metrics (runtime, etc)
