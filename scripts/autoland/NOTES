## BUGS!
* FIXED: [autoland:$patchID:try_syntax] returned invalid whiteboard autoland tag (and shouldn't, should go forth with 'try' as branch)
* FIXED: multiple postings when the patchID is incorrect:
    Autoland Failure
    Specified patches [2429] do not exist, or are not posted on this bug.
    Comment published to bug 657828
    No patches listed right now, will be monitoring this bug.
* hgpusher died on trying to pull the patch (incorrectly formed url for attachments) and there was no comment inserted to db or message back to autoland_queue
* Why does autolanduser post as Marc Jessome?? :) (answer: .hgrc)
* Got three pushes to try --- we really need to check for dupe patch_sets here -- why did i get three patch_sets?  There were only two patch_sets in the db even - so the message queue was holding on to things that were not even in the db anymore.  Let's look at some serious queue purge & dupe checking here.


## Lukas Notes
* possible bug: There's a 10 minute gap between schedulerdbpoller runs could you have an autoland push start & stop in that time with no report back?
** HgPusher could send a message to schedulerdbpoller to create the empty cache file so that it's tracked from push time

* cleanup & metrics: Set up an archiving script for postedbug.log/cache '*.done' files on cruncher - so we have history of usage and also are cleaning up periodically
** Nagios check top entry in cache files and warn about possibly hung builds
** Cronjob to clean up .done files every 24 hours that are more than 24 hours old

* informing: Documentation, blogs, tweets, Yammers, Lightning Talk, Brownbag - get the word out

* project management: tracking bug for bugs filed to this component - perhaps a bugzilla RelEng component?

* development: API implementation, multi-branch landings and map of requirements for each branch activated in this system, Bugzilla Extension for UI

* enhancement: try syntax for retrying oranges when below the threshold? Specifying the threshold?
* enhancement: builds cancelled by Self-Serve would note that in the message to the bug with final results (currently builds that end with exceptions are just 'complete' instead of interrupted)
* enhancement: Makefile & setup script for getting this system up and running in a virtualenv


## Marc Notes
0.0 IMPORTANT : Failure to push in hgpusher leaves [autoland-in-queue] in the whiteboard
0. Sometimes get a "bad msg" when trying to send to hgpusher (the first one on system start?) and yet that patchset gets a pushtime inserted to the db - should wait and retry it until a non-bad msg is returned -- when hgpusher fails it also sends a bad msg
1. The use case of "Flag bug for landing --> Wait for review --> land":
    -  Will not currently work, due to an early design mistake. The fix is
       fairly straight forward, but will require some time. I can redesign
       this and implement ASAP. I've outlined the necessary changes below:
        - When a tag is found by autoland_queue.py:bz_search_handler(),
          the bug needs to be checked for reviews in the case that it is
          a to-branch landing.
        - As it stands right now, the tag is pulled and entered into the queue
          and then when popped off the queue, the reviews are checked. 
        - autoland_queue.py:get_patchset() performs checking on the reviews
          based on try/branch. get_patchset() fails out and comments on bad
          reviews. This is NOT what we want.
        - We want to check the patch in autoland_queue.py:bz_search_handler()
          for the proper review permissions, and if they are not there, we
          simply ignore it until out next poll.
        - OPTIONS:
              o  change autoland_queue.py:get_patchset() to have a toggle on
                 comment posting, and use the get_patchset function to check.
              o  rewrite autoland_queue.py:get_patchset() to return a
                 pass/fail state, for example:
                    return (False, 'Autoland Failure Comment')
                 and only post the comment in the correct cases.
              o  I'm sure there are better ideas out there
        - NOTE: Check patch headers at this point, so users aren't waiting
                a while just for a failure.
2. A lot of this code needs to be cleaned up a bit. Some improvements I would
   like to make are:
    - Bugzilla represents its numbers as strings, but internally the autoland
      tools represent them as integers. There is quite a bit of type
      conversion and it would be nice to change that. Either convert at the
      earliest point, or internally store as strings. I prefer the former.
    - Simply fix some of the messy program flow, and code reuse problems.
    - After x # of retries on apply/push in hgpusher.py:apply_patchset(),
      clean_repo should be blown away and cloned again.
    - Get tests using a static test config, rather than the default config
      file.
    - After landing on branch, should set attachment flag checked-in+
3. The whole enforcement of "full headers" on patches might be a bit difficult
   & disliked, possibly leading to many issues with developers/bugzilla spam.
   They are not required on try runs, however they are for landing to branch.
4. There is a possible issue with db_handler.py:PatchSetGetNext(), where the
   SQL query might not pull a try run if mozilla-central (or whatever branch
   is in the branch field) is either above threshold or disabled.
5. autoland_queue needs to poll the database for jobs that have been in the queue for a long time
6. Handle clone failures properly.
7. Do something about the split config/auth.ini usage in hgpusher.

## Dear Future Autolanding
0. HgExtension (using Pbiggar's trychooser one) - could take your patches(diff) and create bugzilla 
   attachemnt with bz API, put in the right autoland comments and Bob's your uncle: you just did it
   all from the command line
